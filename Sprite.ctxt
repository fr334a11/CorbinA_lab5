#BlueJ class context
comment0.params=x\ y\ mass\ spriteType
comment0.target=Sprite(int,\ int,\ int,\ SpriteType)
comment1.params=
comment1.target=int\ random()
comment1.text=\r\n\ the\ overloaded\ function\ of\ random\ that\ will\ give\ a\ range\ between\ 5\ and\ 25\r\n
comment10.params=
comment10.target=void\ act()
comment2.params=max
comment2.target=int\ random(int)
comment2.text=\r\n\ returns\ a\ random\ value\ from\ 0\ through\ given\ max\r\n
comment3.params=num
comment3.target=double\ abs(double)
comment3.text=\r\n\ find\ the\ absoulte\ value\ of\ a\ double\ to\ return\ a\ double\r\n
comment4.params=num
comment4.target=int\ roundInt(double)
comment4.text=\r\n\ rounds\ a\ doulbe\ into\ an\ int\r\n
comment5.params=
comment5.target=void\ roundTheBall()
comment5.text=\r\n\ Slowly\ averages\ the\ width\ and\ height\ of\ the\ ball.\r\n\ It\ will\ never\ reach\ a\ 1\:1\ ratio\ again,\ but\ it\ will\ quickly\ spring\ from\ being\ very\ wide/long\ and\ then\ slow\r\n
comment6.params=
comment6.target=Coordinate\ getCenter()
comment6.text=\r\n\ returns\ the\ current\ position\ of\ the\ ball\ relitive\ to\ the\ center\r\n
comment7.params=changeX
comment7.target=void\ bounce(boolean)
comment7.text=\r\n\ changes\ the\ height\ and\ width\ of\ the\ circle\ based\ off\ the\ acceleration,\ while\ keeping\ the\ Width*Height\=Mass\ ratio\r\n
comment8.params=
comment8.target=void\ errorAccelerationPatch()
comment8.text=\r\n\ patch\ to\ make\ sure\ that\ a\ ball\ won't\ get\ stuck.\r\n\ if\ the\ acceleration\ of\ x\ or\ y\ is\ between\ -1\ and\ 1\ the\ ball\ will\ not\ move\ because\ it\ holds\ it's\ position\ as\ an\ int\r\n
comment9.params=
comment9.target=void\ errorEdgePatch()
comment9.text=\r\n\ Finaly\ check\ to\ make\ sure\ that\ a\ ball\ (post\ squash)\ will\ not\ exceed\ the\ bounds,\ should\ be\ called\ as\ a\ FINAL\ check\r\n
numComments=11
